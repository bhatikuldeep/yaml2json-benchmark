name: Build & Release Binaries

on:
  push:
    tags:
      - 'v*'  # triggers on version tags like v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Setup Go
      - name: Setup Go
        if: always()
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # 3. Setup Rust
      - name: Setup Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup update stable

      # 4. Build Go binary
      - name: Build Go
        run: |
          set -eux
          cd go
          go mod tidy
          go build -v -o yaml2json
          ls -lah
          cd ..

      # 5. Build Rust binary
      - name: Build Rust
        run: |
          set -eux
          cd rust
          cargo build --release
          ls -lah target/release
          cd ..

      # 6. Prepare artifacts
      - name: Prepare artifacts
        run: |
          set -eux
          mkdir -p artifacts
          cp go/yaml2json artifacts/yaml2json-go
          cp rust/target/release/yaml2json-rust artifacts/yaml2json-rust
          sha256sum artifacts/yaml2json-go > artifacts/yaml2json-go.sha256
          sha256sum artifacts/yaml2json-rust > artifacts/yaml2json-rust.sha256
          ls -lah artifacts

      # 7. Create GitHub Release
      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8. Upload binaries to Release
      - name: Upload binaries to Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
