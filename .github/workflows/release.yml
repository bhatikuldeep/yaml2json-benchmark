name: Build & Release Binaries

on:
  push:
    tags:
      - "v*" # triggers on version tags like v1.0.0

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            go-os: linux
            go-arch: amd64
          - os: ubuntu-latest
            arch: arm64
            go-os: linux
            go-arch: arm64
          - os: macos-latest
            arch: amd64
            go-os: darwin
            go-arch: amd64
          - os: macos-latest
            arch: arm64
            go-os: darwin
            go-arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # 3. Build Go binary
      - name: Build Go binary
        run: |
          set -eux
          cd go
          go mod tidy

          GOOS=${{ matrix.go-os }}
          GOARCH=${{ matrix.go-arch }}
          OUTPUT="../yaml2json-${{ matrix.go-os }}-${{ matrix.arch }}"

          echo "Building Go binary: GOOS=$GOOS GOARCH=$GOARCH"
          CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -v -ldflags="-s -w" -o "$OUTPUT"

          if [ ! -f "$OUTPUT" ]; then
            echo "Go binary not found at $OUTPUT!"
            exit 1
          fi

          echo "Go binary built successfully: $OUTPUT"
          ls -lah "$OUTPUT"
          file "$OUTPUT"
          cd ..

      # 4. Prepare artifacts
      - name: Prepare artifacts
        run: |
          set -eux
          mkdir -p artifacts
          mv yaml2json-* artifacts/

          cd artifacts
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum * > checksums.txt
          elif command -v shasum >/dev/null 2>&1; then
            shasum -a 256 * > checksums.txt
          else
            echo "No checksum utility found"
            exit 1
          fi

          echo "Artifacts prepared:"
          ls -lah
          cat checksums.txt

      # 5. Upload artifacts (optional, for debugging)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.go-os }}-${{ matrix.arch }}
          path: artifacts/*

      # 6. Create GitHub Release
      - name: Create Release and Upload Binaries
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: artifacts/*
          generate_release_notes: true
